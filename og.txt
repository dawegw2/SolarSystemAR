<a-assets>
    <!-- textures from https://www.solarsystemscope.com/textures/-->
    <a-asset-item id="mars-planet" src="assets/models/mars.obj"></a-asset-item>
    <a-asset-item id="mars-mtl" src="assets/models/mars.mtl"></a-asset-item>
   
    <a-asset-item id="mercury" src="assets/models/mercury.gltf"></a-asset-item>
    <a-asset-item id="venus" src="assets/models/venus.gltf"></a-asset-item>
    <a-asset-item id="earth" src="assets/models/earth.gltf"></a-asset-item>
    <a-asset-item id="mars" src="assets/models/mars.gltf"></a-asset-item>
    <a-asset-item id="jupiter" src="assets/models/jupiter.gltf"></a-asset-item>
    <a-asset-item id="saturn" src="assets/models/saturn.gltf"></a-asset-item>
    <a-asset-item id="uranus" src="assets/models/uranus.gltf"></a-asset-item>
    <a-asset-item id="neptune" src="assets/models/neptune.gltf"></a-asset-item>
</a-assets>
    
    <!-- MARS
    <a-entity obj-model="obj: #mars-planet; mtl: #mars-mtl" scale="0.5 0.5 0.5">
        <a-animation attribute="rotation" dur="10000" to="0 360 0" repeat="indefinite" easing="linear"></a-animation>
    </a-entity>
    -->

    <!-- MERCURY 
    <a-entity gltf-model="#mercury" scale="0.5 0.5 0.5">
        <a-animation attribute="rotation" dur="10000" to="0 360 0" repeat="indefinite" easing="linear"></a-animation>
    </a-entity>
    -->

    <!-- VENUS 
    <a-entity gltf-model="#venus" scale="0.5 0.5 0.5">
        <a-animation attribute="rotation" dur="10000" to="0 360 0" repeat="indefinite" easing="linear"></a-animation>
    </a-entity>
    -->

    <!-- EARTH
    <a-entity gltf-model="#earth" scale="0.5 0.5 0.5">
        <a-animation attribute="rotation" dur="10000" to="0 360 0" repeat="indefinite" easing="linear"></a-animation>
    </a-entity>
    -->

    <!-- MARS
    <a-entity obj-model="obj: #mars-planet; mtl: #mars-mtl" scale="0.5 0.5 0.5">
        <a-animation attribute="rotation" dur="10000" to="0 360 0" repeat="indefinite" easing="linear"></a-animation>
    </a-entity>
    -->

    <!-- JUPITER 
    <a-entity gltf-model="#jupiter" scale="0.5 0.5 0.5">
        <a-animation attribute="rotation" dur="10000" to="0 360 0" repeat="indefinite" easing="linear"></a-animation>
    </a-entity> 
    -->

    <!-- SATURN 
    <a-entity gltf-model="#saturn" scale="0.5 0.5 0.5">
        <a-animation attribute="rotation" dur="10000" to="0 360 0" repeat="indefinite" easing="linear"></a-animation>
    </a-entity>
    -->

    <!-- URANUS 
    <a-entity gltf-model="#uranus" scale="0.5 0.5 0.5">
        <a-animation attribute="rotation" dur="10000" to="0 360 0" repeat="indefinite" easing="linear"></a-animation>
    </a-entity>
    -->

    <!-- NEPTUNE 
    <a-entity gltf-model="#neptune" scale="0.5 0.5 0.5">
        <a-animation attribute="rotation" dur="10000" to="0 360 0" repeat="indefinite" easing="linear"></a-animation>
    </a-entity>
    -->


      //if (modelIndex == 0) {
                //modelIndex = 7;
            //} else {
              //  modelIndex--;
            //}




function staticLoadPlaces() {
    return [
        {
            name: 'Planets',
            location: {
            },
        },
    ];
}

var setModel = function (model, entity) {
    if (model.scale) {
        entity.setAttribute('scale', model.scale);
    }

    entity.setAttribute('gltf-model', model.url);
    
    let description = document.querySelector('a-text')

    description.setAttribute('value', model.value) // set planet description
    description.setAttribute('position', model.position) // set text position 
  
    const div = document.querySelector('.name');
    div.innerText = model.name;
};


function renderPlaces(places) {
    let scene = document.querySelector('a-scene');
    let marker = document.querySelector('a-marker');

    places.forEach(() => {
        let model = document.createElement('a-entity');

        setModel(models[modelIndex], model);

        model.setAttribute('animation-mixer', '');

        let anim = document.createElement('a-animation'); //create animation element

        //set rotation animation settings
        anim.setAttribute('attribute', 'rotation');
        anim.setAttribute('dur', '10000');
        anim.setAttribute('to', '0 360 0');
        anim.setAttribute('repeat', 'indefinite');
        anim.setAttribute('easing', 'linear');

        model.appendChild(anim); // adds the animation element within the entity/model element

        document.querySelector('button[data-action="change"]').addEventListener('click', function () {
         
            modelIndex++;
            var newIndex = modelIndex % models.length;
            setModel(models[newIndex], model);
        });

        scene.appendChild(marker);    
        marker.appendChild(model);        
    });
}